<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>#randomdots</title><link>https://jeanbourgain8.github.io/</link><description>Personal Website</description><atom:link href="https://jeanbourgain8.github.io/rss.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2023 &lt;a href="mailto:jeanbourgain8@gmail.com"&gt;Hasanth&lt;/a&gt; 
&lt;a rel="license" href="https://creativecommons.org/licenses/by-nc-sa/4.0/"&gt;
&lt;img alt="Creative Commons License BY-NC-SA"
style="border-width:0; margin-bottom:12px;"
src="https://i.creativecommons.org/l/by-nc-sa/4.0/88x31.png"&gt;&lt;/a&gt;</copyright><lastBuildDate>Wed, 22 Feb 2023 18:43:27 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Past, Present &amp; Future</title><link>https://jeanbourgain8.github.io/posts/Blogsite/2023-02-22-22%3A57%3A03/</link><dc:creator>Hasanth</dc:creator><description>&lt;h5&gt;Table of Contents&lt;/h5&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Blogsite/2023-02-22-22%3A57%3A03/#2012-2016"&gt;2012 - 2016&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Blogsite/2023-02-22-22%3A57%3A03/#2016-2019"&gt;2016 - 2019&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Blogsite/2023-02-22-22%3A57%3A03/#2019-present"&gt;2019 - Present&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Blogsite/2023-02-22-22%3A57%3A03/#future-"&gt;Future -&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/luffy.jpg"&gt;&lt;/p&gt;
&lt;h3 id="2012-2016"&gt;2012 - 2016&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;I graduate with a Bachelors Degree in Instrumentation Engineering (EE) from IIT Kharagpur in 2016. During my bachelors, I worked on Instrumentation, Biomedical Devices &amp;amp; Image Processing, Machine Learning (Theory).
In 2015, I did my internship at Reliance Industries Ltd., Surat. There I was awarded something like "Best Intern" award and was felicitated by VP-Engineering for solving a long-standing problem of theirs. For this, I was given a Pre-Placement Offer. I got place in Hewlett - Packard Enterprise - HPE (they said it was R&amp;amp;D while recruting, buggers ended up making me do software).  This is the &lt;a href="https://ieeexplore.ieee.org/document/6891337"&gt;paper&lt;/a&gt; I took up for my graduation thesis project. I found errors in their algorithm and informed corrections to them which they accepted. &lt;strong&gt;It's on Matrix Factorization&lt;/strong&gt; ðŸ˜…&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Projects I worked on during my Bachelors&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Modelling the Transitions in Lung cancer cells and classification of different cells using Deep Belief Networks.&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Modelling different stages of epigenomic cells and classifying them into 4 different transition stages with an accuracy of 97.5% and 89.9% respectively for binary and multi-class problems.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Measurement of fiber angular orientation distributions of the objects in the images.&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Using the fourier components for determining the orientation. Can be used to identify the alignment of objects with good accuracy.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ARMS-Robotic Arm Sleeves&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Interfaced EMG sensors and IMU with a robotic arm using Xigbee protocol and Atmega 16 microcontroller for mimicing the human arm movements.(group project)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Worked on classification of Alzheimerâ€™s diseased and non diseased persons with EEG&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Using EEG signal features for classifying diseased and non diseased person.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Examination of various feature extraction and selection techniques for binary classification problem of Righthalf and Left half brain activity based on EEG signals.&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Performing Pre processing using STFT transformation and using alpha,beta,etc. components as features to classify&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Design and Construction of a low cost Digital PH-meter using constant phase element as sensor&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Designed and constructed a low cost PH-meter from scratch using Operational-Amplifiers and Logic gates(for condition-ing the output of sensing element, PMMA, DQN-70 coated probesâ€¢ &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Analog circuit design for Measuring Heart Rate and Blood flow rate - Plethysmography&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Designed and constructed circuitry for measuring the blood flow rate using plethysmography technique from basic low-pass filters and Instrumentation Amplifiers.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Sanjeevani&lt;/strong&gt;&lt;ul&gt;
&lt;li&gt;Conceptualized and designed a prototype of a product which is made by bringing all kinds of card tests in one compact machine to detect conditions of diseases.(group project)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here are some of the courses which I took during my bachelors which aligned with my then interests: &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Machine Learning, &lt;/li&gt;
&lt;li&gt;Computational Methods &amp;amp; Algorithms in Signal Processing, &lt;/li&gt;
&lt;li&gt;Probability &amp;amp; Statistics&lt;/li&gt;
&lt;li&gt;Digital Image Processing, &lt;/li&gt;
&lt;li&gt;Information Theory, &lt;/li&gt;
&lt;li&gt;Computer Networks etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;During my bachelors, I have been part of various extra-academic activities. I was part of a Gold-Winning Ad-Design Team, Product Design Team, Chemical Innovation Team &amp;amp; Hardware Modelling Teams. I also played some hockey briefly during my 2nd year. I have also guided some of juniors for an Open-IIT Product Design Competition. &lt;/p&gt;
&lt;h3 id="2016-2019"&gt;2016 - 2019&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;I joined HPE in &lt;strong&gt;Aug'16&lt;/strong&gt;, at HPE, I worked on Spring Boot Frameworks, Hibernate etc., initially I did some Splunk setup &amp;amp;  Automation works, later some UI and by the end mostly Backend works I was doing (on whole, I got some full stack experience). I didn't find the work much interesting and realized that I would be better at doing R&amp;amp;D works than software. So, I resigned in &lt;strong&gt;Sept'17&lt;/strong&gt;, hoping to apply for Masters in 2018 (start MS in 2019), after spending some time on my own to identify my interests precisely. &lt;/p&gt;
&lt;p&gt;During this period, from graduation till my resignition &lt;strong&gt;(Aug'16 - Aug'17&lt;/strong&gt;), I have gained some interest in &lt;a href="https://www.irakemelmacher.com/"&gt;Prof. Ira Kemelmacher's&lt;/a&gt; working areas - 3D Facial Reconstruction, SLAM (partially) etc. Also then, there wasn't much buzz about Deep Learning etc. yet, not at least in India. Though Yann's, Hinton's &amp;amp; Fei-Fei's models were just starting to make some noise, they didn't get much attention (that's what I think). The pre-doc programs at MSR-India, Google etc., were also not so well known back then. &lt;/p&gt;
&lt;p&gt;I resigned my job but had to spend some time on growing works to decide upon my interests between ML Theory &amp;amp; ML Applied. For my thesis, I worked on Machine Learning Theory, but as I said, I was also getting some interest in 3D Facial Reconstruction, SLAM etc. So, I decided to apply for Research Assistanship at IISC - CSA. At that time, with having my prior work a little statistically inclined, I found Ambedkar Dukkipati for (ML-Theory) &amp;amp; VAL Lab in CDS (for ML in images - CV etc.) as professors suitable to work with. I applied for VAL-Lab and was asked to attend an interview for the RA Position. I did attend but returned back in the middle of the interview. I had a little argument with them about their notations on Regression Cost Minimization Function which they asked me to derive. And also I realised that they wanted me more for the implementation parts of the project than for theoretical understanding of Deep Learning workings on images. &lt;/p&gt;
&lt;p&gt;I returned to home, used up my last amounts of salary left in my bank account to build a PC. It costed me around 1 Lakh, I assembled the PC myself, where I bought the parts in all kinds of sales. By that time, AWS &amp;amp; Google Cloud - GPUs &amp;amp; TPUs services weren't much known, I think they didn't even get started. So, that's why I had to burn so much of my money. &lt;/p&gt;
&lt;p&gt;Anyways, between &lt;strong&gt;Oct'17 - Jul'18&lt;/strong&gt;. I built my PC, installing all softwares &amp;amp; their patches, version matchings (all of this took loads of time, which one might easily misjudge as too much since it is has become very easy now to create a setup ready for ML &amp;amp; DL works). 
In &lt;strong&gt;May'18&lt;/strong&gt;,  I've participated in two Ideathons (Ideas' Hackathons) &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.hackerearth.com/challenges/hackathon/rupay-contactless-ideathon/"&gt;Rupay Contactless Ideathon&lt;/a&gt; (by NPCI, related to UPI Payments)&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.hackerearth.com/challenges/hackathon/pg-global-innovation-challenge/"&gt;P&amp;amp;G's Global Innovation Challenge&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In the Rupay's hackathon, I was one (lone team member) of the top 10 finalists among 1.2K teams (2 allowed per each team). 
In P&amp;amp;G's hackathon two of my solutions were shortlisted in top 50 ideas, this too similarly around 1.2K teams took part (4 allowed per each team I suppose). I resigned and didn't proceed further to the next levels of hackathon.&lt;/p&gt;
&lt;p&gt;Then, I started by first picking up &amp;amp; working on concepts of 3D Facial Reconstruction. 
These were some projects I tried to initially replicate and draw some insights &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://www.hao-li.com/Hao_Li/Hao_Li_-_publications.html"&gt;Hao Li&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="http://arxiv.org/pdf/1612.00523v1.pdf"&gt;Paper - 1&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/watch?v=qX8AIRsFmTA"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.hao-li.com/publications/papers/siggraphAsia2017ADFSIFRTR.pdf"&gt;Paper - 2&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/watch?v=dERjpAaoNjk"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.irakemelmacher.com/research"&gt;Ira Kemelmacher&lt;/a&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.google.com/url?q=https%3A%2F%2Fgrail.cs.washington.edu%2Fprojects%2FAudioToObama%2F&amp;amp;sa=D&amp;amp;sntz=1&amp;amp;usg=AOvVaw3wKphmADwZ_WeCvS9do85c"&gt;Project Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://www.patrikhuber.ch/"&gt;Patrik Huber&lt;/a&gt; his was the most easily accessible work at that time&lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.4dface.io/"&gt;Project Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Max Planck Institute(MPI)'s Flame Model for &lt;a href="https://flame.is.tue.mpg.de/"&gt;face&lt;/a&gt; &amp;amp; for &lt;a href="https://smpl-x.is.tue.mpg.de/"&gt;entire body&lt;/a&gt;, during this time, Amazon just purchased the venture with name Body Labs by these people at MPI.&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.yisongyue.com/research.php"&gt;Yisong Yue&lt;/a&gt; - integrated the component of voices/lip movement to faces&lt;ul&gt;
&lt;li&gt;&lt;a href="http://projects.yisongyue.com/visual_speech/"&gt;Paper&lt;/a&gt; &amp;amp; &lt;a href="https://www.youtube.com/watch?v=9zL7qejW9fE"&gt;Video&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href="https://alexlattas.com/"&gt;Imperical College London's Group - ICL&lt;/a&gt; this work was the most promising way for 3D Realistic Face Avatars. That's why facebook actually purchased them then. &lt;ul&gt;
&lt;li&gt;&lt;a href="https://www.ucl.ac.uk/junior-geometry/Geo-ML-Health/poster/Alexandros-Lattas-Poster.pdf"&gt;Poster&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;I have tried to access and replicate these works in order to come up with a product that would take in something like a 2D frontal face input and convert it to 3D avatar. I've gone through entire code bases and debugged their works, even found some errors in ICL's works and made them aware, to which they didn't care much to respond ðŸ˜….&lt;/p&gt;
&lt;p&gt;From &lt;strong&gt;Jul'18 - Aug'18&lt;/strong&gt;, I have prepared for GRE and gave the exams. I got 169/170 in Maths, but 151/170 in English (320 overall). I knew that english would be my pain point at that time for GRE. &lt;/p&gt;
&lt;p&gt;Yeah, somewhere in and around &lt;strong&gt;Sept'18&lt;/strong&gt;, Apple came up with its Augmented Reality (AR) Tech. with a depth camera at front. It was with this all my 3D Face Reconstruction dream world came down crashing to earth. Till then, I was trying to build something which would take in a 2D image and spit out a 3D caricature, with an addition of some voice regarding developments as well (possibly). But, the avatars which Apple came up with were so cool that how much ever I may try to come with a system that's efficient in 2D frontal image to 3D face conversion, it can never be as cool as Apple's due to its depth camera addition to the mobiles. All of a sudden, the friendly 3D reconstruction tech became so affordable, especially for faces.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Nov'18&lt;/strong&gt;, I was already late by then, I started collecting recommendation letters from professors &amp;amp; some of my mentors at my resigned workplace. I had to go to IIT to get a recommendation from my prof. Another shocking thing that happened to me during this period was, my father getting diagnoised with a heart issue. I wasn't there at home at that time. I had gone to Delhi to visit my friends who were preparing for UPSC already by then for more than a year. Majority of my time between &lt;strong&gt;Nov'18 - Jan'19 (mid)&lt;/strong&gt; went away in roaming around hospitals. Doctors said that either my father should get a bypass surgery or get 2 Stents in his heart, there's no other alternative. During this time, I simultaneously finished my applications for Masters Programs in Computer Science. I applied for 4 colleges. Among them, I got accepts from &lt;strong&gt;University at Buffalo - SUNY&lt;/strong&gt;,  &lt;strong&gt;University of Texas - Dallas (with scholarship).&lt;/strong&gt; I wasn't quite happy mith my accepts. I knew that my language skills have improved comparitively to before but I failed to recognise that they weren't good enough to write a gramatically correct and engaging SOPs. I must have taken some assistance, Sigh! ðŸ˜•&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;Feb'19&lt;/strong&gt;, after seeing my father's condition and hospital environment. My point of view changed a lot towards life. I witnessed the hospitals charging unscrupulous rates and treating with sub-standard stents/equipment, especially those whose expenses are taken care of by the govt. health insurance policies - poor, employees etc. All these have pushed me to give a shot at UPSC once before I leave for Masters in &lt;strong&gt;Aug'19&lt;/strong&gt;. So, in &lt;strong&gt;Feb'19&lt;/strong&gt; withoout any knowledge, just looking at some blogposts (Anudeep etc.), I picked up books, shifted myself to Hyderabad to a secluded place and started preparing. &lt;/p&gt;
&lt;p&gt;Since then, I have been doing this UPSC thing. &lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/tenor.gif"&gt;&lt;/p&gt;
&lt;h3 id="2019-present"&gt;2019 - Present&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Coming Soon...&lt;/p&gt;
&lt;h3 id="future-"&gt;Future -&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;Blah... Blah.. Blah...&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/robin%20&amp;amp;%20luffy.png"&gt;&lt;/p&gt;</description><category>self</category><guid>https://jeanbourgain8.github.io/posts/Blogsite/2023-02-22-22%3A57%3A03/</guid><pubDate>Wed, 22 Feb 2023 17:27:00 GMT</pubDate></item><item><title>The Prince - Niccolo Machiavelli</title><link>https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/a-202111152313/</link><dc:creator>Hasanth</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;My Rating - 4/5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/The%20Prince%20-%20Niccolo%20Machiavelli.jpg"&gt;&lt;/p&gt;
&lt;h5&gt;Table of Contents&lt;/h5&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/a-202111152313/#book-review"&gt;Book Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/a-202111152313/#subscribe"&gt;Subscribe!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="book-review"&gt;Book Review&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;An informed reader would already know that the author's disposition is quite unconventional in this book. He tries to dismantle the usual emphasis laid on virtues, as to him, they appear too distant from reality &amp;amp; handicapped when it comes to getting things done. He treats both virtues &amp;amp; vices with equanimity. His core agenda appears to be this - "&lt;strong&gt;doing whatever it takes to retain the kingship&lt;/strong&gt;". Depending on the environment, situations &amp;amp; resources available, he puts forward necessary strategies which are to be adopted. On whole, it is a guide which addresses all significant stages one comes across in the cycle of kingship.&lt;/p&gt;
&lt;p&gt;I consider this as an insightful read. I shall not think twice if I wish to read it again. &lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="subscribe"&gt;Subscribe!&lt;/h3&gt;
&lt;p&gt;If you find the content here helpful/interesting and wish to read more, then &lt;em&gt;&lt;strong&gt;subscribe&lt;/strong&gt;&lt;/em&gt; to &lt;a href="https://randompage8.substack.com/"&gt;&lt;strong&gt;Random Page&lt;/strong&gt;&lt;/a&gt; to &lt;strong&gt;never miss an update.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;Â Donâ€™t hesitate to comment or leave aÂ &lt;strong&gt;&lt;a href="https://twitter.com/jeanbourgain8"&gt;message&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="row"&gt;
    &lt;iframe src="https://randompage8.substack.com/embed" max-width="480" height="120" frameborder="0" scrolling="no" class="centred"&gt;&lt;/iframe&gt;
    &lt;br&gt;
&lt;/div&gt;</description><category>books-read</category><category>goodreads</category><category>non-fiction</category><category>philosophy</category><guid>https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/a-202111152313/</guid><pubDate>Mon, 15 Nov 2021 17:43:00 GMT</pubDate></item><item><title>Murder on Orient Express - Agatha Christie</title><link>https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/murder-on-orient-express-agatha-christie-review/</link><dc:creator>Hasanth</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;My Rating - 3/5&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/Murder%20on%20Orient%20Express%20%20Agatha%20Christie.jpg"&gt;&lt;/p&gt;
&lt;h5&gt;Table of Contents&lt;/h5&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/murder-on-orient-express-agatha-christie-review/#book-review"&gt;Book Review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/murder-on-orient-express-agatha-christie-review/#subscribe"&gt;Subscribe!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;h3 id="book-review"&gt;Book Review&lt;/h3&gt;
&lt;hr&gt;
&lt;p&gt;I've finished reading the book. On whole, it's a one time read. If there is anything that I'll take home from the book, that will be its unconventional sentences, quite different from what I'm aware of. Finally, I've read one of &lt;strong&gt;Agatha Christie's&lt;/strong&gt;! This will be my second detective-fiction/mystery author reading, my first one is &lt;strong&gt;Earl Stanley Gardener&lt;/strong&gt; (Perry Mason).&lt;/p&gt;
&lt;p&gt;In the book, I did observe emphasis placed on parallel, case-based thinking. It gave me a positive feeling. I've been trying to get back to this way of thinking for some days, after having taken a good long break from it. I'm eagerly looking forward to compare Agatha's protaganist &lt;strong&gt;Hercule Poirot&lt;/strong&gt; with Stanley's &lt;strong&gt;Perry Mason&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;Concluding, it's a breezy read and won't take much time to finish. Hold your expectations moderate.&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="subscribe"&gt;Subscribe!&lt;/h3&gt;
&lt;p&gt;If you find the content here helpful/interesting and wish to read more, then &lt;em&gt;&lt;strong&gt;subscribe&lt;/strong&gt;&lt;/em&gt; to &lt;a href="https://randompage8.substack.com/"&gt;&lt;strong&gt;Random Page&lt;/strong&gt;&lt;/a&gt; to &lt;strong&gt;never miss an update.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;Â Donâ€™t hesitate to comment or leave aÂ &lt;strong&gt;&lt;a href="https://twitter.com/jeanbourgain8"&gt;message&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="row"&gt;
    &lt;iframe src="https://randompage8.substack.com/embed" max-width="480" height="120" frameborder="0" scrolling="no" class="centred"&gt;&lt;/iframe&gt;
    &lt;br&gt;
&lt;/div&gt;</description><category>books-read</category><category>fiction</category><category>goodreads</category><category>mystery</category><guid>https://jeanbourgain8.github.io/posts/Substack/Page/Goodreads/Read/murder-on-orient-express-agatha-christie-review/</guid><pubDate>Thu, 04 Nov 2021 14:47:25 GMT</pubDate></item><item><title>Asymptotic Sequential Learning.</title><link>https://jeanbourgain8.github.io/posts/Substack/Proof/Economics/asymptotic-sequential-learning/</link><dc:creator>Hasanth</dc:creator><description>&lt;div&gt;&lt;blockquote&gt;
&lt;p&gt;Review of paper from (Journal of Economics), by Omer Tamuz's Group (Caltech)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/Asymptotic%20Sequential%20Learning.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Proof/Economics/asymptotic-sequential-learning/" style="color: #3578E5;"&gt;Read moreâ€¦&lt;/a&gt; (1 min remaining to read)&lt;/p&gt;&lt;/div&gt;</description><category>economics</category><category>research</category><guid>https://jeanbourgain8.github.io/posts/Substack/Proof/Economics/asymptotic-sequential-learning/</guid><pubDate>Tue, 26 Jun 2018 14:05:59 GMT</pubDate></item><item><title>Deep learning Setup</title><link>https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/</link><dc:creator>Hasanth</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;Installing tools for NVIDIA GPU &amp;amp; creating a Deeplearing Setup (caffe)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h5&gt;Table of Contents&lt;/h5&gt;
&lt;div class="toc"&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#specifications"&gt;Specifications&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#disabling-nouveau-driver"&gt;Disabling "nouveau" driver&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#working-setup-using-bumblebee-primus-for-intelnvidia-gpu"&gt;Working setup using bumblebee &amp;amp; primus for Intel+Nvidia GPU&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#installation-of-cuda-80-and-verification"&gt;Installation of CUDA-8.0 and verification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#installation-of-cudnn"&gt;Installation of CUDNN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#installing-opencv32-just-enough-for-working-with-caffe"&gt;Installing OpenCV3.2 (just enough for working with caffe)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#installing-caffe-with-opencv3-gpu-cudacudnn"&gt;Installing Caffe with OpenCV3 &amp;amp; GPU (CUDA+cuDNN)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/#subscribe"&gt;Subscribe!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/Deep%20Learning%20Setup.png"&gt;&lt;/p&gt;
&lt;h3 id="specifications"&gt;Specifications&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OS - Ubuntu 16.04&lt;/li&gt;
&lt;li&gt;Graphics - Nvidia Optimus (GTX1070 + IntelHD)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="disabling-nouveau-driver"&gt;Disabling "nouveau" driver&lt;/h3&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-get update
sudo apt-get upgrade
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install one editor which you like the most&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-get install vim
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Before installing the drivers into your hybrid system, first we need to disable nouveau (default display driver comes with linux) because it lies above all in permissions. Press 'CTRL+Alt+F1' to open the terminal, enter your username, password credentials and enter &lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo vim /etc/modprobe.d/blacklist.conf
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, add the following lines at the end of the file (Save &amp;amp; Exit)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;blacklist nouveau
blacklist lbm-nouveau
options nouveau &lt;span class="nv"&gt;modeset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; nouveau off
&lt;span class="nb"&gt;alias&lt;/span&gt; lbm-nouveau off
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Next, get back to the terminal and enter the following and update the kernel and then reboot&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;echo&lt;/span&gt; options nouveau &lt;span class="nv"&gt;modeset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; sudo tee -a /etc/modprobe.d/nouveau-kms.conf
sudo update-initramfs -u
sudo reboot
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="working-setup-using-bumblebee-primus-for-intelnvidia-gpu"&gt;Working setup using bumblebee &amp;amp; primus for Intel+Nvidia GPU&lt;/h3&gt;
&lt;p&gt;Basically, using primus we can switch between the graphics (Nvidia &amp;amp; Intel). We take the help of bumblebee to make this smooth and a GUI indicator to make the transistions simple.&lt;/p&gt;
&lt;p&gt;Add the following repositories&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-add-repository ppa:graphics-drivers
sudo apt-add-repository ppa:bumblebee/testing
sudo apt-add-repository ppa:nilarimogard/webupd8
sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Go to Settings &amp;gt;&amp;gt; Software &amp;amp; Updates &amp;gt;&amp;gt; Additional Drivers
Select Nvidia-378 driver (because it is stable and it worked for me) and click on Apply then Restart the system.&lt;/p&gt;
&lt;p&gt;After Restarting, you can see the Nvidia-driver being selected as the display driver which previously was Xorg's nouveau. For further confirmation, you can check with the following command and the output must be something like this.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;nvidia-smi

&lt;span class="o"&gt;[&lt;/span&gt;root@localhost release&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="c1"&gt;# nvidia-smi&lt;/span&gt;
Wed Sep &lt;span class="m"&gt;26&lt;/span&gt; &lt;span class="m"&gt;23&lt;/span&gt;:16:16 &lt;span class="m"&gt;2012&lt;/span&gt;       
+------------------------------------------------------+                       
&lt;span class="p"&gt;|&lt;/span&gt; NVIDIA-SMI &lt;span class="m"&gt;3&lt;/span&gt;.295.41   Driver Version: &lt;span class="m"&gt;295&lt;/span&gt;.41         &lt;span class="p"&gt;|&lt;/span&gt;                       
&lt;span class="p"&gt;|&lt;/span&gt;-------------------------------+----------------------+----------------------+
&lt;span class="p"&gt;|&lt;/span&gt; Nb.  Name                     &lt;span class="p"&gt;|&lt;/span&gt; Bus Id        Disp.  &lt;span class="p"&gt;|&lt;/span&gt; Volatile ECC SB / DB &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; Fan   Temp   Power Usage /Cap &lt;span class="p"&gt;|&lt;/span&gt; Memory Usage         &lt;span class="p"&gt;|&lt;/span&gt; GPU Util. Compute M. &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;===============================&lt;/span&gt;+&lt;span class="o"&gt;======================&lt;/span&gt;+&lt;span class="o"&gt;======================&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.  Tesla C2050               &lt;span class="p"&gt;|&lt;/span&gt; &lt;span class="m"&gt;0000&lt;/span&gt;:05:00.0  On     &lt;span class="p"&gt;|&lt;/span&gt;         &lt;span class="m"&gt;0&lt;/span&gt;          &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="m"&gt;30&lt;/span&gt;%   &lt;span class="m"&gt;62&lt;/span&gt; C  P0    N/A /  N/A &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;3&lt;/span&gt;%   70MB / 2687MB &lt;span class="p"&gt;|&lt;/span&gt;   &lt;span class="m"&gt;44&lt;/span&gt;%     Default    &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;-------------------------------+----------------------+----------------------&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt; Compute processes:                                               GPU Memory &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;  GPU  PID     Process name                                       Usage      &lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="o"&gt;=============================================================================&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;
&lt;span class="p"&gt;|&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;.  &lt;span class="m"&gt;7336&lt;/span&gt;     ./align                                                 61MB  &lt;span class="p"&gt;|&lt;/span&gt;
+-----------------------------------------------------------------------------+
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, either use command line or Synaptics Manager to install the requirements. For simplicity, I shall use Synaptic Manager to demonstrate
1. Enter bumblebee in the search dialog then you will be able to seea list - bumblebee, bumblebee-nvidia, primus. Select all the three and Mark up them for Installation and click Apply
2. After installing above three we check for bbswitch-dkms in search dialog box. This can be seen as already installed (if not then do install it)
Get back to the terminal and take the help of prime to select Intel Graphics as primary&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo prime-select intel
sudo reboot
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, enter prime-indicator(/plus) in search and mark up for installation. Restart your system.
Inorder to make the bumblebee and bbswitch to take care of your system and use latest nvidia driver which has been just installed, go to the following file and edit&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo vim /etc/bumblebee/bumblebee.conf
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Update the following contents&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nv"&gt;Driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt; should be changed to
&lt;span class="nv"&gt;Driver&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;nvidia
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;In [driver-nvidia] section replace all nvidia-current terms to nvidia-378 (If you have installed 378 or else replace it with the driver number whichever has been installed) and also in the same section replace&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nv"&gt;PMMethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;auto
&lt;span class="nv"&gt;PMMethod&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;bbswitch
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now restart&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo reboot
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;We are done with our Nvidia driver installation and we also can switch between Intel and Nvidia Graphics which will help with saving the battery&lt;/p&gt;
&lt;h3 id="installation-of-cuda-80-and-verification"&gt;Installation of CUDA-8.0 and verification&lt;/h3&gt;
&lt;p&gt;Now, switch to Nvidia Graphics and download the run file. In my case, I have downloaded &lt;code&gt;cuda_8.0.61_375.26_linux.run&lt;/code&gt; file because, previous ones need a below 4.9 gcc compiler but when it comes to 16.04 by defualt it installs gcc-5.0. The installation of Caffe requires a gcc-5 compiler to work (portbuf). After downloading, go to the specific folder and then enter&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;chmod &lt;span class="m"&gt;755&lt;/span&gt; cuda_8.0.61_375.26_linux.run
sudo ./cuda_8.0.61_375.26_linux.run
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Enter 'no' when asked to install Nvidia driver and rest all can be entered as "yes".
Don't worry if it shows something like this&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="o"&gt;===========&lt;/span&gt;

&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nv"&gt;Summary&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;

&lt;span class="o"&gt;===========&lt;/span&gt;

Driver: Not Selected

Toolkit: Installed &lt;span class="k"&gt;in&lt;/span&gt; /usr/local/cuda-8.0

Samples: Installed &lt;span class="k"&gt;in&lt;/span&gt; /home/username, but missing recommended libraries

Please make sure that

- PATH includes /usr/local/cuda-8.0/bin

- LD_LIBRARY_PATH includes /usr/local/cuda-8.0/lib64, or, add /usr/local/cuda-8.0/lib64 to /etc/ld.so.conf and run ldconfig as root

To uninstall the CUDA Toolkit, run the uninstall script &lt;span class="k"&gt;in&lt;/span&gt; /usr/local/cuda-8.0/bin

Please see CUDA_Installation_Guide_Linux.pdf &lt;span class="k"&gt;in&lt;/span&gt; /usr/local/cuda-8.0/doc/pdf &lt;span class="k"&gt;for&lt;/span&gt; detailed information on setting up CUDA.

***WARNING: Incomplete installation! This installation did not install the CUDA Driver. A driver of version at least &lt;span class="m"&gt;361&lt;/span&gt;.00 is required &lt;span class="k"&gt;for&lt;/span&gt; CUDA &lt;span class="m"&gt;8&lt;/span&gt;.0 functionality to work.
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now (Optional not required)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo modprobe nvidia
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo vim /etc/profile

and enter &lt;span class="k"&gt;in&lt;/span&gt; the end

&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/cuda-8.0/bin:&lt;span class="nv"&gt;$PATH&lt;/span&gt;  
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local/cuda-8.0/lib64:&lt;span class="nv"&gt;$LD_LIBRARY_PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Save &amp;amp; Exit&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo ldconfig
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The setup is complete for CUDA now it's time to verify this&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-get install freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev  libglu1-mesa libglu1-mesa-dev libgl1-mesa-glx  
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Go to the location where samples folder is installed by default it is installed at ~/&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; into the samples directory
&lt;span class="nb"&gt;cd&lt;/span&gt; 1_Utilities/deviceQuery
sudo make
sudo ./deviceQuery
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It should show something like this&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;Device &lt;span class="m"&gt;0&lt;/span&gt;: Quadro M1000M
  CUDA Driver Version / Runtime Version          &lt;span class="m"&gt;8&lt;/span&gt;.0 / &lt;span class="m"&gt;7&lt;/span&gt;.5
  CUDA Capability Major/Minor version number:    &lt;span class="m"&gt;5&lt;/span&gt;.0
  Total amount of global memory:                 &lt;span class="m"&gt;2002&lt;/span&gt; MBytes &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2099642368&lt;/span&gt; bytes&lt;span class="o"&gt;)&lt;/span&gt;
  &lt;span class="o"&gt;(&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; Multiprocessors, &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;128&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; CUDA Cores/MP:     &lt;span class="m"&gt;512&lt;/span&gt; CUDA Cores
  GPU Max Clock rate:                            &lt;span class="m"&gt;1072&lt;/span&gt; MHz &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;.07 GHz&lt;span class="o"&gt;)&lt;/span&gt;
  Memory Clock rate:                             &lt;span class="m"&gt;2505&lt;/span&gt; Mhz
  Memory Bus Width:                              &lt;span class="m"&gt;128&lt;/span&gt;-bit
  L2 Cache Size:                                 &lt;span class="m"&gt;2097152&lt;/span&gt; bytes
  Maximum Texture Dimension Size &lt;span class="o"&gt;(&lt;/span&gt;x,y,z&lt;span class="o"&gt;)&lt;/span&gt;         &lt;span class="nv"&gt;1D&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="m"&gt;65536&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;2D&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="m"&gt;65536&lt;/span&gt;, &lt;span class="m"&gt;65536&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="nv"&gt;3D&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="m"&gt;4096&lt;/span&gt;, &lt;span class="m"&gt;4096&lt;/span&gt;, &lt;span class="m"&gt;4096&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  Maximum Layered 1D Texture Size, &lt;span class="o"&gt;(&lt;/span&gt;num&lt;span class="o"&gt;)&lt;/span&gt; layers  &lt;span class="nv"&gt;1D&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="m"&gt;16384&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;2048&lt;/span&gt; layers
  Maximum Layered 2D Texture Size, &lt;span class="o"&gt;(&lt;/span&gt;num&lt;span class="o"&gt;)&lt;/span&gt; layers  &lt;span class="nv"&gt;2D&lt;/span&gt;&lt;span class="o"&gt;=(&lt;/span&gt;&lt;span class="m"&gt;16384&lt;/span&gt;, &lt;span class="m"&gt;16384&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;, &lt;span class="m"&gt;2048&lt;/span&gt; layers
  Total amount of constant memory:               &lt;span class="m"&gt;65536&lt;/span&gt; bytes
  Total amount of shared memory per block:       &lt;span class="m"&gt;49152&lt;/span&gt; bytes
  Total number of registers available per block: &lt;span class="m"&gt;65536&lt;/span&gt;
  Warp size:                                     &lt;span class="m"&gt;32&lt;/span&gt;
  Maximum number of threads per multiprocessor:  &lt;span class="m"&gt;2048&lt;/span&gt;
  Maximum number of threads per block:           &lt;span class="m"&gt;1024&lt;/span&gt;
  Max dimension size of a thread block &lt;span class="o"&gt;(&lt;/span&gt;x,y,z&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;1024&lt;/span&gt;, &lt;span class="m"&gt;1024&lt;/span&gt;, &lt;span class="m"&gt;64&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  Max dimension size of a grid size    &lt;span class="o"&gt;(&lt;/span&gt;x,y,z&lt;span class="o"&gt;)&lt;/span&gt;: &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2147483647&lt;/span&gt;, &lt;span class="m"&gt;65535&lt;/span&gt;, &lt;span class="m"&gt;65535&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;
  Maximum memory pitch:                          &lt;span class="m"&gt;2147483647&lt;/span&gt; bytes
  Texture alignment:                             &lt;span class="m"&gt;512&lt;/span&gt; bytes
  Concurrent copy and kernel execution:          Yes with &lt;span class="m"&gt;1&lt;/span&gt; copy engine&lt;span class="o"&gt;(&lt;/span&gt;s&lt;span class="o"&gt;)&lt;/span&gt;
  Run &lt;span class="nb"&gt;time&lt;/span&gt; limit on kernels:                     No
  Integrated GPU sharing Host Memory:            No
  Support host page-locked memory mapping:       Yes
  Alignment requirement &lt;span class="k"&gt;for&lt;/span&gt; Surfaces:            Yes
  Device has ECC support:                        Disabled
  Device supports Unified Addressing &lt;span class="o"&gt;(&lt;/span&gt;UVA&lt;span class="o"&gt;)&lt;/span&gt;:      Yes
  Device PCI Domain ID / Bus ID / location ID:   &lt;span class="m"&gt;0&lt;/span&gt; / &lt;span class="m"&gt;1&lt;/span&gt; / &lt;span class="m"&gt;0&lt;/span&gt;
  Compute Mode:
     &amp;lt; Default &lt;span class="o"&gt;(&lt;/span&gt;multiple host threads can use with device simultaneously&lt;span class="o"&gt;)&lt;/span&gt; &amp;gt;

deviceQuery, CUDA &lt;span class="nv"&gt;Driver&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; CUDART, CUDA Driver &lt;span class="nv"&gt;Version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;8&lt;/span&gt;.0, CUDA Runtime &lt;span class="nv"&gt;Version&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;7&lt;/span&gt;.5, &lt;span class="nv"&gt;NumDevs&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;, &lt;span class="nv"&gt;Device0&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; Quadro M1000M
&lt;span class="nv"&gt;Result&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; PASS
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Similarly, we conduct the bandwidth test which will also show PASS, something similar to above  and with this we confirm its installation. If it shows "fail" then there is some error in CUDA installation.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ..
&lt;span class="nb"&gt;cd&lt;/span&gt; bandwidthTest
sudo make
sudo ./bandwidthTest
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;With this, we are ready with our system to use CUDA and NVIDIA GPU.&lt;/p&gt;
&lt;h3 id="installation-of-cudnn"&gt;Installation of CUDNN&lt;/h3&gt;
&lt;p&gt;Go to Nvidia's site and download cuDNN ( I myself used cuDNN 5.1) you will get almost 98MB file. Extract the contents and go to the extracted folder&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; /cuda
sudo cp -P include/cudnn.h /usr/include
sudo cp -P lib64/libcudnn* /usr/lib/x86_64-linux-gnu/
sudo chmod a+r /usr/lib/x86_64-linux-gnu/libcudnn*
&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id="installing-opencv32-just-enough-for-working-with-caffe"&gt;Installing OpenCV3.2 (just enough for working with caffe)&lt;/h3&gt;
&lt;p&gt;In Ubuntu 16.04, install the dependencies first and then build the OpenCV 3.2 from source.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-get install --assume-yes build-essential cmake git
sudo apt-get install --assume-yes pkg-config unzip ffmpeg qtbase5-dev python-dev python3-dev python-numpy python3-numpy
sudo apt-get install --assume-yes libopencv-dev libgtk-3-dev libdc1394-22 libdc1394-22-dev libjpeg-dev libpng12-dev libtiff5-dev libjasper-dev
sudo apt-get install --assume-yes libavcodec-dev libavformat-dev libswscale-dev libxine2-dev libgstreamer0.10-dev libgstreamer-plugins-base0.10-dev
sudo apt-get install --assume-yes libv4l-dev libtbb-dev libfaac-dev libmp3lame-dev libopencore-amrnb-dev libopencore-amrwb-dev libtheora-dev
sudo apt-get install --assume-yes libvorbis-dev libxvidcore-dev v4l-utils python-vtk
sudo apt-get install --assume-yes liblapacke-dev libopenblas-dev checkinstall
sudo apt-get install --assume-yes libgdal-dev
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Download the latest source archive for OpenCV 3.2 from https://github.com/opencv/opencv/archive/3.2.0.zip&lt;/p&gt;
&lt;p&gt;Enter the unpacked directory. Execute&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;mkdir build
&lt;span class="nb"&gt;cd&lt;/span&gt; build/    
cmake -D &lt;span class="nv"&gt;CMAKE_BUILD_TYPE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;RELEASE -D &lt;span class="nv"&gt;CMAKE_INSTALL_PREFIX&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;/usr/local -D &lt;span class="nv"&gt;FORCE_VTK&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;WITH_TBB&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;WITH_V4L&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;WITH_QT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;WITH_OPENGL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;WITH_CUBLAS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;CUDA_NVCC_FLAGS&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;"-D_FORCE_INLINES"&lt;/span&gt; -D &lt;span class="nv"&gt;WITH_GDAL&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;WITH_XINE&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON -D &lt;span class="nv"&gt;BUILD_EXAMPLES&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;ON ..
make -j &lt;span class="k"&gt;$(($(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;To complete the installation execute the following&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo make install
sudo /bin/bash -c &lt;span class="s1"&gt;'echo "/usr/local/lib" &amp;gt; /etc/ld.so.conf.d/opencv.conf'&lt;/span&gt;
sudo ldconfig
sudo apt-get update
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Verify installation with&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;python
&amp;gt;&amp;gt;&amp;gt; import cv2
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;If it doesn't work then there is some error with OpenCV3.2 installation. Now, we are done with our OpenCV3 installation, next we jump into Caffe installation.&lt;/p&gt;
&lt;h3 id="installing-caffe-with-opencv3-gpu-cudacudnn"&gt;Installing Caffe with OpenCV3 &amp;amp; GPU (CUDA+cuDNN)&lt;/h3&gt;
&lt;p&gt;For pre-requisites we execute the following lines&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-get update
sudo apt-get upgrade

sudo apt-get install -y build-essential cmake git pkg-config
sudo apt-get install -y libprotobuf-dev libleveldb-dev libsnappy-dev libhdf5-serial-dev protobuf-compiler
sudo apt-get install -y libatlas-base-dev
sudo apt-get install -y --no-install-recommends libboost-all-dev
sudo apt-get install -y libgflags-dev libgoogle-glog-dev liblmdb-dev

&lt;span class="c1"&gt;# (Python general)&lt;/span&gt;
sudo apt-get install -y python-pip

&lt;span class="c1"&gt;# (Python 2.7 development files)&lt;/span&gt;
sudo apt-get install -y python-dev
sudo apt-get install -y python-numpy python-scipy
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Clone the Caffe repo.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~
git clone https://github.com/BVLC/caffe.git
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make changes in Makefile.config and Makefile and configure it to proceed with the Caffe installation smoothly.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/caffe
cp Makefile.config.example Makefile.config
sudo vim Makefile.config
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Make the following changes and configure the copied Makefile.config (by uncommenting and editing the following lines in the file)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;USE_CUDNN :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
OPENCV_VERSION :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;

Change
CUDA_DIR :&lt;span class="o"&gt;=&lt;/span&gt; /usr/local/cuda
to
CUDA_DIR :&lt;span class="o"&gt;=&lt;/span&gt; /usr/local/cuda-8.0

PYTHON_INCLUDE :&lt;span class="o"&gt;=&lt;/span&gt; /usr/include/python2.7 /usr/lib/python2.7/dist-packages/numpy/core/include
WITH_PYTHON_LAYER :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;
INCLUDE_DIRS :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PYTHON_INCLUDE&lt;span class="k"&gt;)&lt;/span&gt; /usr/local/include /usr/include/hdf5/serial
LIBRARY_DIRS :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PYTHON_LIB&lt;span class="k"&gt;)&lt;/span&gt; /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Somtimes, the PYTHON_INCLUDE may differ in some systems check for the presence of numpy core files&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;PYTHON_INCLUDE :&lt;span class="o"&gt;=&lt;/span&gt; /usr/include/python2.7 /usr/local/lib/python2.7/dist-packages/numpy/core/include  
WITH_PYTHON_LAYER :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;  
INCLUDE_DIRS :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PYTHON_INCLUDE&lt;span class="k"&gt;)&lt;/span&gt; /usr/local/include /usr/include/hdf5/serial  
LIBRARY_DIRS :&lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;PYTHON_LIB&lt;span class="k"&gt;)&lt;/span&gt; /usr/local/lib /usr/lib /usr/lib/x86_64-linux-gnu /usr/lib/x86_64-linux-gnu/hdf5/serial
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, edit Makefile ( above we edited Makefile.config)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/caffe
sudo vim Makefile

Change
&lt;span class="nv"&gt;NVCCFLAGS&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; -ccbin&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CXX&lt;span class="k"&gt;)&lt;/span&gt; -Xcompiler -fPIC &lt;span class="k"&gt;$(&lt;/span&gt;COMMON_FLAGS&lt;span class="k"&gt;)&lt;/span&gt;
to
&lt;span class="nv"&gt;NVCCFLAGS&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; -D_FORCE_INLINES -ccbin&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;CXX&lt;span class="k"&gt;)&lt;/span&gt; -Xcompiler -fPIC &lt;span class="k"&gt;$(&lt;/span&gt;COMMON_FLAGS&lt;span class="k"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install some python requirements with pip&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/caffe/python
&lt;span class="k"&gt;for&lt;/span&gt; req &lt;span class="k"&gt;in&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;cat requirements.txt&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;do&lt;/span&gt; sudo -H pip install &lt;span class="nv"&gt;$req&lt;/span&gt; --upgrade&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;done&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;It's time to check make and check caffe's installation&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="nb"&gt;cd&lt;/span&gt; ~/caffe
make all -j &lt;span class="k"&gt;$(($(&lt;/span&gt;nproc&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="k"&gt;))&lt;/span&gt;
make &lt;span class="nb"&gt;test&lt;/span&gt;
make runtest

make pycaffe
make distribute

sudo vim ~/.bashrc
add the follwing line to the file
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PYTHONPATH&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;~/caffe/python:&lt;span class="nv"&gt;$PYTHONPATH&lt;/span&gt;
&lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Verify your installation with (for python2.7)&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;&lt;span class="n"&gt;python&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;caffe&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now, Deep Learning setup all ready for running. Get Going!&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id="subscribe"&gt;Subscribe!&lt;/h3&gt;
&lt;p&gt;If you find the content here helpful/interesting and wish to read more, then &lt;em&gt;&lt;strong&gt;subscribe&lt;/strong&gt;&lt;/em&gt; to &lt;a href="https://randomproduct8.substack.com/"&gt;&lt;strong&gt;Random Product&lt;/strong&gt;&lt;/a&gt; to &lt;strong&gt;never miss an update.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;Â Donâ€™t hesitate to comment or leave aÂ &lt;strong&gt;&lt;a href="https://twitter.com/jeanbourgain8"&gt;message&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="row"&gt;
    &lt;iframe src="https://randomstack8.substack.com/embed" max-width="480" height="120" frameborder="0" scrolling="no" class="centred"&gt;&lt;/iframe&gt;
    &lt;br&gt;
&lt;/div&gt;</description><category>code</category><category>deep-learning</category><category>installation</category><category>system-maintenance</category><guid>https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/deep-learning-setup/</guid><pubDate>Thu, 23 Nov 2017 01:54:00 GMT</pubDate></item><item><title>Audio Drivers Installion</title><link>https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/audio-drivers-installation/</link><dc:creator>Hasanth</dc:creator><description>&lt;blockquote&gt;
&lt;p&gt;Repairing (installation) Audio Drivers of Debian PC&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img alt="" src="https://jeanbourgain8.github.io/images/Audio%20Drivers%20Installation.jpg"&gt;&lt;/p&gt;
&lt;p&gt;To support my freshly built PC, 4.11 kernel version for Realtek-ALC1220 was needed to support its audio. So, if you too are building your own new PC like me then this might help you as a  temporary fix. 
Uninstall your alsa-base and reinstall latest version it should work fine.&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo apt-get remove alsa-base
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Now go to http://www.stchman.com/tools/alsa/alsa_setup.sh and download the script and then do&lt;/p&gt;
&lt;div class="code"&gt;&lt;pre class="code literal-block"&gt;sudo ./alsa_setup.sh
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This will reinstall the lastest driver in your system and reboots it.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Precautions:&lt;/strong&gt;  If you are having a Hybrid Graphics (Intel + Nvidia) then it is suggested to modify alsa-base when you are on Intel HD Graphics. Because this driver supports primarily Intel HDA versions. If you try to install while you are on NVIDIA graphics it might cause many failures.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h3 id="subscribe"&gt;Subscribe!&lt;/h3&gt;
&lt;p&gt;If you find the content here helpful/interesting and wish to read more, then &lt;em&gt;&lt;strong&gt;subscribe&lt;/strong&gt;&lt;/em&gt; to &lt;a href="https://randomproduct8.substack.com/"&gt;&lt;strong&gt;Random Product&lt;/strong&gt;&lt;/a&gt; to &lt;strong&gt;never miss an update.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PS:&lt;/strong&gt;Â Donâ€™t hesitate to comment or leave aÂ &lt;strong&gt;&lt;a href="https://twitter.com/jeanbourgain8"&gt;message&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class="row"&gt;
    &lt;iframe src="https://randomstack8.substack.com/embed" max-width="480" height="120" frameborder="0" scrolling="no" class="centred"&gt;&lt;/iframe&gt;
    &lt;br&gt;
&lt;/div&gt;</description><category>code</category><category>drivers</category><category>installation</category><category>system-maintenance</category><guid>https://jeanbourgain8.github.io/posts/Substack/Product/Code/System%20Maintenance/audio-drivers-installation/</guid><pubDate>Fri, 17 Nov 2017 05:36:00 GMT</pubDate></item></channel></rss>